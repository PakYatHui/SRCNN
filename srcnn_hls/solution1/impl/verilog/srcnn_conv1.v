// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_ftmap_address0,
        input_ftmap_ce0,
        input_ftmap_q0,
        conv1_weights_address0,
        conv1_weights_ce0,
        conv1_weights_q0,
        conv1_biases_address0,
        conv1_biases_ce0,
        conv1_biases_q0,
        feat1_address0,
        feat1_ce0,
        feat1_we0,
        feat1_d0,
        grp_fu_704_p_din0,
        grp_fu_704_p_din1,
        grp_fu_704_p_opcode,
        grp_fu_704_p_dout0,
        grp_fu_704_p_ce,
        grp_fu_708_p_din0,
        grp_fu_708_p_din1,
        grp_fu_708_p_dout0,
        grp_fu_708_p_ce
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] input_ftmap_address0;
output   input_ftmap_ce0;
input  [31:0] input_ftmap_q0;
output  [12:0] conv1_weights_address0;
output   conv1_weights_ce0;
input  [31:0] conv1_weights_q0;
output  [5:0] conv1_biases_address0;
output   conv1_biases_ce0;
input  [31:0] conv1_biases_q0;
output  [21:0] feat1_address0;
output   feat1_ce0;
output   feat1_we0;
output  [31:0] feat1_d0;
output  [31:0] grp_fu_704_p_din0;
output  [31:0] grp_fu_704_p_din1;
output  [1:0] grp_fu_704_p_opcode;
input  [31:0] grp_fu_704_p_dout0;
output   grp_fu_704_p_ce;
output  [31:0] grp_fu_708_p_din0;
output  [31:0] grp_fu_708_p_din1;
input  [31:0] grp_fu_708_p_dout0;
output   grp_fu_708_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_ftmap_ce0;
reg conv1_weights_ce0;
reg conv1_biases_ce0;
reg feat1_ce0;
reg feat1_we0;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] out_tile_address0;
reg    out_tile_ce0;
reg    out_tile_we0;
reg   [31:0] out_tile_d0;
wire   [31:0] out_tile_q0;
reg   [10:0] in_tile_0_address0;
reg    in_tile_0_ce0;
reg    in_tile_0_we0;
wire   [31:0] in_tile_0_d0;
wire   [31:0] in_tile_0_q0;
reg   [9:0] w_tile_0_address0;
reg    w_tile_0_ce0;
reg    w_tile_0_we0;
wire   [31:0] w_tile_0_d0;
wire   [31:0] w_tile_0_q0;
reg   [6:0] n_1_reg_1694;
wire    ap_CS_fsm_state2;
wire   [9:0] zext_ln33_fu_540_p1;
reg   [9:0] zext_ln33_reg_1704;
wire    ap_CS_fsm_state3;
wire   [8:0] add_ln34_fu_550_p2;
reg   [8:0] add_ln34_reg_1712;
wire   [0:0] icmp_ln33_fu_544_p2;
wire   [7:0] trunc_ln34_fu_564_p1;
reg   [7:0] trunc_ln34_reg_1717;
wire   [7:0] tH_fu_574_p3;
reg   [7:0] tH_reg_1722;
wire   [8:0] sub77_fu_586_p2;
reg   [8:0] sub77_reg_1729;
wire   [9:0] zext_ln36_fu_602_p1;
reg   [9:0] zext_ln36_reg_1734;
wire    ap_CS_fsm_state4;
wire   [8:0] add_ln37_fu_612_p2;
reg   [8:0] add_ln37_reg_1742;
wire   [0:0] icmp_ln36_fu_606_p2;
wire   [9:0] zext_ln37_fu_630_p1;
reg   [9:0] zext_ln37_reg_1747;
wire   [7:0] tW_fu_640_p3;
reg   [7:0] tW_reg_1752;
wire   [8:0] zext_ln37_1_fu_648_p1;
reg   [8:0] zext_ln37_1_reg_1759;
wire   [7:0] tmp_16_cast_fu_656_p3;
reg   [7:0] tmp_16_cast_reg_1764;
wire    ap_CS_fsm_state5;
wire   [3:0] add_ln41_fu_670_p2;
reg   [3:0] add_ln41_reg_1772;
wire   [0:0] icmp_ln41_fu_664_p2;
wire   [8:0] sub81_fu_702_p2;
reg   [8:0] sub81_reg_1782;
wire   [31:0] bitcast_ln45_fu_707_p1;
reg   [31:0] bitcast_ln45_reg_1787;
wire    ap_CS_fsm_state6;
wire   [12:0] tmp_3_fu_720_p3;
reg   [12:0] tmp_3_reg_1792;
wire    ap_CS_fsm_state7;
wire   [5:0] add_ln42_fu_738_p2;
reg   [5:0] add_ln42_reg_1800;
wire   [0:0] cmp37_fu_744_p2;
reg   [0:0] cmp37_reg_1805;
wire   [0:0] icmp_ln42_fu_732_p2;
wire   [5:0] add_ln43_fu_773_p2;
wire    ap_CS_fsm_state8;
wire   [10:0] add_ln63_fu_809_p2;
reg   [10:0] add_ln63_reg_1821;
wire    ap_CS_fsm_state9;
wire   [5:0] add_ln58_fu_829_p2;
reg   [5:0] add_ln58_reg_1829;
wire   [0:0] cmp78_fu_835_p2;
reg   [0:0] cmp78_reg_1834;
wire   [0:0] icmp_ln58_fu_823_p2;
wire   [15:0] sub_ln63_fu_912_p2;
reg   [15:0] sub_ln63_reg_1839;
reg   [10:0] in_tile_0_addr_reg_1844;
wire    ap_CS_fsm_state10;
wire   [5:0] add_ln59_fu_946_p2;
reg   [5:0] add_ln59_reg_1852;
wire   [0:0] and_ln60_fu_957_p2;
reg   [0:0] and_ln60_reg_1857;
wire   [0:0] icmp_ln59_fu_940_p2;
wire   [7:0] add_ln76_fu_1061_p2;
reg   [7:0] add_ln76_reg_1866;
wire    ap_CS_fsm_state12;
wire   [3:0] add_ln71_fu_1077_p2;
reg   [3:0] add_ln71_reg_1874;
wire   [9:0] add_ln76_1_fu_1108_p2;
reg   [9:0] add_ln76_1_reg_1879;
wire   [0:0] icmp_ln71_fu_1071_p2;
wire   [9:0] add_ln76_3_fu_1143_p2;
reg   [9:0] add_ln76_3_reg_1884;
wire    ap_CS_fsm_state13;
wire   [12:0] add_ln76_5_fu_1166_p2;
reg   [12:0] add_ln76_5_reg_1889;
wire   [3:0] add_ln74_fu_1178_p2;
reg   [3:0] add_ln74_reg_1897;
reg   [9:0] w_tile_0_addr_reg_1902;
wire    ap_CS_fsm_state14;
wire   [3:0] add_ln75_fu_1218_p2;
reg   [3:0] add_ln75_reg_1915;
wire   [7:0] tmp_24_cast_fu_1237_p3;
reg   [7:0] tmp_24_cast_reg_1920;
wire    ap_CS_fsm_state16;
wire   [7:0] add_ln91_1_fu_1257_p2;
reg   [7:0] add_ln91_1_reg_1925;
wire   [3:0] add_ln81_fu_1269_p2;
reg   [3:0] add_ln81_reg_1933;
wire   [12:0] tmp_16_fu_1284_p3;
reg   [12:0] tmp_16_reg_1938;
wire    ap_CS_fsm_state17;
wire   [5:0] add_ln82_fu_1302_p2;
reg   [5:0] add_ln82_reg_1946;
wire   [0:0] cmp182_fu_1308_p2;
reg   [0:0] cmp182_reg_1951;
wire   [0:0] icmp_ln82_fu_1296_p2;
reg   [12:0] out_tile_addr_1_reg_1956;
wire    ap_CS_fsm_state18;
wire   [5:0] add_ln83_fu_1337_p2;
reg   [5:0] add_ln83_reg_1964;
wire   [0:0] and_ln84_fu_1348_p2;
reg   [0:0] and_ln84_reg_1969;
wire   [0:0] icmp_ln83_fu_1331_p2;
wire    ap_CS_fsm_state19;
wire   [9:0] add_ln91_3_fu_1378_p2;
reg   [9:0] add_ln91_3_reg_1978;
wire    ap_CS_fsm_state20;
wire   [3:0] add_ln88_fu_1394_p2;
reg   [3:0] add_ln88_reg_1986;
wire   [10:0] add_ln91_4_fu_1426_p2;
reg   [10:0] add_ln91_4_reg_1991;
wire   [0:0] icmp_ln88_fu_1388_p2;
wire    ap_CS_fsm_state21;
wire   [3:0] add_ln90_fu_1456_p2;
reg   [3:0] add_ln90_reg_2004;
wire   [0:0] icmp_ln90_fu_1450_p2;
reg   [31:0] w_tile_0_load_reg_2014;
wire    ap_CS_fsm_state22;
reg   [31:0] in_tile_0_load_reg_2019;
reg   [31:0] mul_reg_2024;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state29;
wire   [7:0] tmp_28_cast_fu_1486_p3;
reg   [7:0] tmp_28_cast_reg_2034;
wire    ap_CS_fsm_state30;
wire   [3:0] add_ln101_fu_1504_p2;
reg   [3:0] add_ln101_reg_2042;
wire  signed [15:0] sext_ln102_fu_1541_p1;
reg  signed [15:0] sext_ln102_reg_2047;
wire   [0:0] icmp_ln101_fu_1498_p2;
wire   [12:0] tmp_18_fu_1554_p3;
reg   [12:0] tmp_18_reg_2052;
wire    ap_CS_fsm_state31;
wire   [5:0] add_ln102_fu_1576_p2;
reg   [5:0] add_ln102_reg_2060;
wire   [0:0] cmp266_fu_1582_p2;
reg   [0:0] cmp266_reg_2065;
wire   [0:0] icmp_ln102_fu_1570_p2;
wire   [21:0] sub_ln105_1_fu_1618_p2;
reg   [21:0] sub_ln105_1_reg_2070;
wire    ap_CS_fsm_state32;
wire   [5:0] add_ln103_fu_1652_p2;
reg   [5:0] add_ln103_reg_2083;
wire   [0:0] and_ln104_fu_1663_p2;
reg   [0:0] and_ln104_reg_2088;
wire   [0:0] icmp_ln103_fu_1646_p2;
wire   [21:0] add_ln105_4_fu_1678_p2;
reg   [21:0] add_ln105_4_reg_2092;
reg   [8:0] h_reg_290;
wire   [0:0] tmp_6_fu_532_p3;
reg   [8:0] w_reg_302;
reg   [3:0] tn_reg_314;
reg   [5:0] th_reg_325;
wire   [0:0] icmp_ln43_fu_767_p2;
reg   [5:0] tw_reg_336;
reg   [5:0] ih_reg_347;
reg   [5:0] iw_reg_358;
wire    ap_CS_fsm_state11;
reg   [3:0] tn_1_reg_369;
wire   [0:0] icmp_ln74_fu_1172_p2;
reg   [3:0] kh_reg_380;
wire   [0:0] icmp_ln75_fu_1212_p2;
reg   [3:0] kw_reg_391;
wire    ap_CS_fsm_state15;
reg   [3:0] tn_2_reg_402;
reg   [5:0] th_1_reg_413;
wire   [0:0] icmp_ln81_fu_1263_p2;
reg   [5:0] tw_1_reg_425;
reg   [3:0] kh_1_reg_437;
reg   [31:0] acc_7_reg_448;
reg   [3:0] kw_1_reg_459;
reg   [31:0] acc_8_reg_470;
reg   [3:0] tn_3_reg_482;
reg   [5:0] th_2_reg_493;
reg   [5:0] tw_2_reg_504;
wire    ap_CS_fsm_state33;
wire   [63:0] zext_ln45_fu_697_p1;
wire   [63:0] zext_ln45_3_fu_758_p1;
wire   [63:0] zext_ln63_3_fu_927_p1;
wire   [63:0] zext_ln63_4_fu_1035_p1;
wire   [63:0] zext_ln76_10_fu_1197_p1;
wire   [63:0] zext_ln76_11_fu_1207_p1;
wire   [63:0] zext_ln85_3_fu_1322_p1;
wire   [63:0] zext_ln91_5_fu_1441_p1;
wire   [63:0] zext_ln91_7_fu_1477_p1;
wire   [63:0] zext_ln105_5_fu_1633_p1;
wire   [63:0] zext_ln105_7_fu_1683_p1;
reg   [6:0] n_fu_164;
wire   [6:0] add_ln31_fu_592_p2;
wire   [0:0] and_ln44_fu_784_p2;
wire    ap_CS_fsm_state26;
wire   [0:0] tmp_7_fu_556_p3;
wire   [7:0] xor_ln34_fu_568_p2;
wire   [8:0] zext_ln34_fu_582_p1;
wire   [7:0] trunc_ln37_fu_626_p1;
wire   [0:0] tmp_8_fu_618_p3;
wire   [7:0] xor_ln37_fu_634_p2;
wire   [2:0] trunc_ln45_fu_652_p1;
wire   [2:0] tmp_4_fu_680_p4;
wire   [2:0] empty_fu_676_p1;
wire   [5:0] tmp_5_fu_689_p3;
wire   [7:0] zext_ln45_1_fu_711_p1;
wire   [7:0] add_ln45_fu_715_p2;
wire   [7:0] zext_ln42_fu_728_p1;
wire   [12:0] zext_ln45_2_fu_749_p1;
wire   [12:0] add_ln45_1_fu_753_p2;
wire   [7:0] zext_ln43_fu_763_p1;
wire   [0:0] icmp_ln44_fu_779_p2;
wire   [8:0] tmp_2_fu_797_p3;
wire   [10:0] tmp_s_fu_789_p3;
wire   [10:0] zext_ln63_fu_805_p1;
wire   [8:0] zext_ln58_1_fu_819_p1;
wire   [6:0] zext_ln58_fu_815_p1;
wire  signed [6:0] tmp_fu_840_p2;
wire  signed [9:0] tmp_cast_fu_846_p1;
wire   [9:0] empty_44_fu_850_p2;
wire  signed [7:0] tmp1_cast_fu_869_p1;
wire   [0:0] tmp_9_fu_855_p3;
wire   [0:0] cmp1_i_fu_863_p2;
wire   [0:0] empty_46_fu_886_p2;
wire   [7:0] spec_select_i_cast_cast_fu_878_p3;
wire   [7:0] empty_45_fu_873_p2;
wire   [7:0] gy_fu_892_p3;
wire   [15:0] tmp_10_fu_904_p3;
wire   [15:0] zext_ln63_1_fu_900_p1;
wire   [10:0] zext_ln63_2_fu_918_p1;
wire   [10:0] add_ln63_1_fu_922_p2;
wire   [8:0] zext_ln59_1_fu_936_p1;
wire   [0:0] icmp_ln60_fu_952_p2;
wire   [6:0] zext_ln59_fu_932_p1;
wire   [6:0] add_ln62_fu_962_p2;
wire  signed [9:0] sext_ln62_fu_968_p1;
wire   [9:0] add_ln62_1_fu_972_p2;
wire   [0:0] tmp_15_fu_996_p3;
wire   [0:0] tmp_14_fu_977_p3;
wire   [0:0] icmp_ln11_fu_985_p2;
wire   [0:0] or_ln10_fu_1012_p2;
wire   [9:0] select_ln10_fu_1004_p3;
wire   [9:0] add_ln11_fu_991_p2;
wire   [9:0] gx_fu_1018_p3;
wire  signed [15:0] sext_ln63_fu_1026_p1;
wire   [15:0] add_ln63_2_fu_1030_p2;
wire   [6:0] tmp_11_fu_1049_p3;
wire   [7:0] zext_ln76_1_fu_1057_p1;
wire   [7:0] zext_ln76_fu_1045_p1;
wire   [5:0] zext_ln71_fu_1067_p1;
wire   [5:0] trunc_ln30_fu_1083_p1;
wire   [5:0] empty_47_fu_1086_p2;
wire   [8:0] tmp_12_fu_1096_p3;
wire   [9:0] zext_ln76_3_fu_1104_p1;
wire   [9:0] zext_ln76_2_fu_1092_p1;
wire   [7:0] zext_ln76_5_fu_1118_p1;
wire   [7:0] add_ln76_2_fu_1122_p2;
wire   [6:0] trunc_ln76_fu_1131_p1;
wire   [9:0] p_shl6_fu_1135_p3;
wire   [9:0] zext_ln76_6_fu_1127_p1;
wire   [9:0] zext_ln76_4_fu_1114_p1;
wire   [9:0] add_ln76_4_fu_1149_p2;
wire   [12:0] p_shl5_fu_1158_p3;
wire   [12:0] zext_ln76_7_fu_1154_p1;
wire   [9:0] zext_ln76_9_fu_1188_p1;
wire   [9:0] add_ln76_6_fu_1192_p2;
wire   [12:0] zext_ln76_8_fu_1184_p1;
wire   [12:0] add_ln76_7_fu_1202_p2;
wire   [2:0] trunc_ln85_fu_1233_p1;
wire   [6:0] tmp_13_fu_1245_p3;
wire   [7:0] zext_ln91_fu_1253_p1;
wire   [7:0] zext_ln85_fu_1229_p1;
wire   [7:0] zext_ln85_1_fu_1275_p1;
wire   [7:0] add_ln85_fu_1279_p2;
wire   [7:0] zext_ln82_fu_1292_p1;
wire   [12:0] zext_ln85_2_fu_1313_p1;
wire   [12:0] add_ln85_1_fu_1317_p2;
wire   [7:0] zext_ln83_fu_1327_p1;
wire   [0:0] icmp_ln84_fu_1343_p2;
wire   [7:0] zext_ln91_1_fu_1353_p1;
wire   [7:0] add_ln91_2_fu_1357_p2;
wire   [6:0] trunc_ln91_fu_1366_p1;
wire   [9:0] p_shl8_fu_1370_p3;
wire   [9:0] zext_ln91_2_fu_1362_p1;
wire   [5:0] zext_ln88_fu_1384_p1;
wire   [5:0] empty_48_fu_1400_p2;
wire   [8:0] tmp_20_fu_1414_p3;
wire   [10:0] tmp_19_fu_1406_p3;
wire   [10:0] zext_ln91_3_fu_1422_p1;
wire   [9:0] zext_ln91_4_fu_1432_p1;
wire   [9:0] add_ln91_5_fu_1436_p2;
wire   [5:0] zext_ln90_fu_1446_p1;
wire   [5:0] add_ln91_fu_1462_p2;
wire   [10:0] zext_ln91_6_fu_1468_p1;
wire   [10:0] add_ln91_6_fu_1472_p2;
wire   [2:0] trunc_ln105_fu_1482_p1;
wire   [5:0] zext_ln101_fu_1494_p1;
wire   [5:0] trunc_ln30_1_fu_1510_p1;
wire   [5:0] empty_49_fu_1513_p2;
wire   [13:0] tmp_17_fu_1523_p3;
wire   [14:0] zext_ln105_1_fu_1531_p1;
wire   [14:0] zext_ln105_fu_1519_p1;
wire   [14:0] sub_ln105_fu_1535_p2;
wire   [7:0] zext_ln105_2_fu_1545_p1;
wire   [7:0] add_ln105_1_fu_1549_p2;
wire   [7:0] zext_ln102_1_fu_1566_p1;
wire   [8:0] zext_ln102_fu_1562_p1;
wire   [8:0] empty_50_fu_1587_p2;
wire   [15:0] zext_ln105_3_fu_1593_p1;
wire  signed [15:0] add_ln105_2_fu_1597_p2;
wire   [13:0] trunc_ln105_1_fu_1606_p1;
wire   [21:0] p_shl_fu_1610_p3;
wire  signed [21:0] sext_ln105_fu_1602_p1;
wire   [12:0] zext_ln105_4_fu_1624_p1;
wire   [12:0] add_ln105_3_fu_1628_p2;
wire   [7:0] zext_ln103_1_fu_1642_p1;
wire   [0:0] icmp_ln104_fu_1658_p2;
wire   [8:0] zext_ln103_fu_1638_p1;
wire   [8:0] add_ln105_fu_1668_p2;
wire   [21:0] zext_ln105_6_fu_1674_p1;
reg   [32:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
end

srcnn_conv1_out_tile_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
out_tile_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_tile_address0),
    .ce0(out_tile_ce0),
    .we0(out_tile_we0),
    .d0(out_tile_d0),
    .q0(out_tile_q0)
);

srcnn_conv1_in_tile_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
in_tile_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(in_tile_0_address0),
    .ce0(in_tile_0_ce0),
    .we0(in_tile_0_we0),
    .d0(in_tile_0_d0),
    .q0(in_tile_0_q0)
);

srcnn_conv1_w_tile_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 648 ),
    .AddressWidth( 10 ))
w_tile_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_tile_0_address0),
    .ce0(w_tile_0_ce0),
    .we0(w_tile_0_we0),
    .d0(w_tile_0_d0),
    .q0(w_tile_0_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        acc_7_reg_448 <= out_tile_q0;
    end else if (((icmp_ln90_fu_1450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        acc_7_reg_448 <= acc_8_reg_470;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_1388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20) & (1'd1 == and_ln84_reg_1969))) begin
        acc_8_reg_470 <= acc_7_reg_448;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        acc_8_reg_470 <= grp_fu_704_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln36_fu_606_p2 == 1'd0))) begin
        h_reg_290 <= add_ln34_reg_1712;
    end else if (((tmp_6_fu_532_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        h_reg_290 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln41_fu_664_p2 == 1'd1))) begin
        ih_reg_347 <= 6'd0;
    end else if (((icmp_ln59_fu_940_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        ih_reg_347 <= add_ln58_reg_1829;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        iw_reg_358 <= add_ln59_reg_1852;
    end else if (((icmp_ln58_fu_823_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        iw_reg_358 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        kh_1_reg_437 <= 4'd0;
    end else if (((icmp_ln90_fu_1450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        kh_1_reg_437 <= add_ln88_reg_1986;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_1071_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        kh_reg_380 <= 4'd0;
    end else if (((icmp_ln75_fu_1212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        kh_reg_380 <= add_ln74_reg_1897;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_1388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20) & (1'd1 == and_ln84_reg_1969))) begin
        kw_1_reg_459 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        kw_1_reg_459 <= add_ln90_reg_2004;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_1172_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        kw_reg_391 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        kw_reg_391 <= add_ln75_reg_1915;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        n_fu_164 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln33_fu_544_p2 == 1'd0))) begin
        n_fu_164 <= add_ln31_fu_592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_fu_1263_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        th_1_reg_413 <= 6'd0;
    end else if (((icmp_ln83_fu_1331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        th_1_reg_413 <= add_ln82_reg_1946;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_1498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        th_2_reg_493 <= 6'd0;
    end else if (((icmp_ln103_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        th_2_reg_493 <= add_ln102_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        th_reg_325 <= 6'd0;
    end else if (((icmp_ln43_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        th_reg_325 <= add_ln42_reg_1800;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_823_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        tn_1_reg_369 <= 4'd0;
    end else if (((icmp_ln74_fu_1172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        tn_1_reg_369 <= add_ln71_reg_1874;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_1071_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        tn_2_reg_402 <= 4'd0;
    end else if (((icmp_ln82_fu_1296_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        tn_2_reg_402 <= add_ln81_reg_1933;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_fu_1263_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        tn_3_reg_482 <= 4'd0;
    end else if (((icmp_ln102_fu_1570_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        tn_3_reg_482 <= add_ln101_reg_2042;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln36_fu_606_p2 == 1'd1))) begin
        tn_reg_314 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln42_fu_732_p2 == 1'd1))) begin
        tn_reg_314 <= add_ln41_reg_1772;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & ((icmp_ln88_fu_1388_p2 == 1'd1) | (1'd0 == and_ln84_reg_1969)))) begin
        tw_1_reg_425 <= add_ln83_reg_1964;
    end else if (((icmp_ln82_fu_1296_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        tw_1_reg_425 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tw_2_reg_504 <= add_ln103_reg_2083;
    end else if (((icmp_ln102_fu_1570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        tw_2_reg_504 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_767_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tw_reg_336 <= add_ln43_fu_773_p2;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln42_fu_732_p2 == 1'd0))) begin
        tw_reg_336 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_1498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        w_reg_302 <= add_ln37_reg_1742;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln33_fu_544_p2 == 1'd1))) begin
        w_reg_302 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln101_reg_2042 <= add_ln101_fu_1504_p2;
        tmp_28_cast_reg_2034[7 : 5] <= tmp_28_cast_fu_1486_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln102_reg_2060 <= add_ln102_fu_1576_p2;
        tmp_18_reg_2052[12 : 5] <= tmp_18_fu_1554_p3[12 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln103_reg_2083 <= add_ln103_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32) & (1'd1 == and_ln104_fu_1663_p2))) begin
        add_ln105_4_reg_2092 <= add_ln105_4_fu_1678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln33_fu_544_p2 == 1'd1))) begin
        add_ln34_reg_1712 <= add_ln34_fu_550_p2;
        sub77_reg_1729 <= sub77_fu_586_p2;
        tH_reg_1722 <= tH_fu_574_p3;
        trunc_ln34_reg_1717 <= trunc_ln34_fu_564_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln36_fu_606_p2 == 1'd1))) begin
        add_ln37_reg_1742 <= add_ln37_fu_612_p2;
        tW_reg_1752 <= tW_fu_640_p3;
        zext_ln37_1_reg_1759[7 : 0] <= zext_ln37_1_fu_648_p1[7 : 0];
        zext_ln37_reg_1747[7 : 0] <= zext_ln37_fu_630_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln41_reg_1772 <= add_ln41_fu_670_p2;
        tmp_16_cast_reg_1764[7 : 5] <= tmp_16_cast_fu_656_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln42_reg_1800 <= add_ln42_fu_738_p2;
        tmp_3_reg_1792[12 : 5] <= tmp_3_fu_720_p3[12 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln58_reg_1829 <= add_ln58_fu_829_p2;
        add_ln63_reg_1821[10 : 3] <= add_ln63_fu_809_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln59_reg_1852 <= add_ln59_fu_946_p2;
        in_tile_0_addr_reg_1844 <= zext_ln63_3_fu_927_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln71_reg_1874 <= add_ln71_fu_1077_p2;
        add_ln76_reg_1866 <= add_ln76_fu_1061_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln74_reg_1897 <= add_ln74_fu_1178_p2;
        add_ln76_3_reg_1884 <= add_ln76_3_fu_1143_p2;
        add_ln76_5_reg_1889 <= add_ln76_5_fu_1166_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln75_reg_1915 <= add_ln75_fu_1218_p2;
        w_tile_0_addr_reg_1902 <= zext_ln76_10_fu_1197_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_1071_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        add_ln76_1_reg_1879 <= add_ln76_1_fu_1108_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln81_reg_1933 <= add_ln81_fu_1269_p2;
        add_ln91_1_reg_1925 <= add_ln91_1_fu_1257_p2;
        tmp_24_cast_reg_1920[7 : 5] <= tmp_24_cast_fu_1237_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln82_reg_1946 <= add_ln82_fu_1302_p2;
        tmp_16_reg_1938[12 : 5] <= tmp_16_fu_1284_p3[12 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln83_reg_1964 <= add_ln83_fu_1337_p2;
        out_tile_addr_1_reg_1956 <= zext_ln85_3_fu_1322_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'd1 == and_ln84_reg_1969))) begin
        add_ln88_reg_1986 <= add_ln88_fu_1394_p2;
        add_ln91_3_reg_1978 <= add_ln91_3_fu_1378_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln90_reg_2004 <= add_ln90_fu_1456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_1388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20) & (1'd1 == and_ln84_reg_1969))) begin
        add_ln91_4_reg_1991[10 : 3] <= add_ln91_4_fu_1426_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        and_ln104_reg_2088 <= and_ln104_fu_1663_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_fu_940_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        and_ln60_reg_1857 <= and_ln60_fu_957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_fu_1331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        and_ln84_reg_1969 <= and_ln84_fu_1348_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bitcast_ln45_reg_1787 <= bitcast_ln45_fu_707_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_1296_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        cmp182_reg_1951 <= cmp182_fu_1308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_1570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        cmp266_reg_2065 <= cmp266_fu_1582_p2;
        sub_ln105_1_reg_2070 <= sub_ln105_1_fu_1618_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln42_fu_732_p2 == 1'd0))) begin
        cmp37_reg_1805 <= cmp37_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_823_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        cmp78_reg_1834 <= cmp78_fu_835_p2;
        sub_ln63_reg_1839 <= sub_ln63_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        in_tile_0_load_reg_2019 <= in_tile_0_q0;
        w_tile_0_load_reg_2014 <= w_tile_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        mul_reg_2024 <= grp_fu_708_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        n_1_reg_1694 <= n_fu_164;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_fu_1498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        sext_ln102_reg_2047 <= sext_ln102_fu_1541_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln41_fu_664_p2 == 1'd1))) begin
        sub81_reg_1782 <= sub81_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln33_reg_1704[8 : 0] <= zext_ln33_fu_540_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        zext_ln36_reg_1734[8 : 0] <= zext_ln36_fu_602_p1[8 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_6_fu_532_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_6_fu_532_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_biases_ce0 = 1'b1;
    end else begin
        conv1_biases_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv1_weights_ce0 = 1'b1;
    end else begin
        conv1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        feat1_ce0 = 1'b1;
    end else begin
        feat1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == and_ln104_reg_2088))) begin
        feat1_we0 = 1'b1;
    end else begin
        feat1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        in_tile_0_address0 = zext_ln91_7_fu_1477_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        in_tile_0_address0 = in_tile_0_addr_reg_1844;
    end else begin
        in_tile_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state21))) begin
        in_tile_0_ce0 = 1'b1;
    end else begin
        in_tile_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln60_reg_1857))) begin
        in_tile_0_we0 = 1'b1;
    end else begin
        in_tile_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_ftmap_ce0 = 1'b1;
    end else begin
        input_ftmap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        out_tile_address0 = zext_ln105_5_fu_1633_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        out_tile_address0 = out_tile_addr_1_reg_1956;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        out_tile_address0 = zext_ln85_3_fu_1322_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        out_tile_address0 = zext_ln45_3_fu_758_p1;
    end else begin
        out_tile_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state8))) begin
        out_tile_ce0 = 1'b1;
    end else begin
        out_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        out_tile_d0 = acc_7_reg_448;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        out_tile_d0 = bitcast_ln45_reg_1787;
    end else begin
        out_tile_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_fu_1388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20) & (1'd1 == and_ln84_reg_1969)) | ((icmp_ln43_fu_767_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'd1 == and_ln44_fu_784_p2)))) begin
        out_tile_we0 = 1'b1;
    end else begin
        out_tile_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        w_tile_0_address0 = zext_ln91_5_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        w_tile_0_address0 = w_tile_0_addr_reg_1902;
    end else begin
        w_tile_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state21))) begin
        w_tile_0_ce0 = 1'b1;
    end else begin
        w_tile_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        w_tile_0_we0 = 1'b1;
    end else begin
        w_tile_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_6_fu_532_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln33_fu_544_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln36_fu_606_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln41_fu_664_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln42_fu_732_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln43_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln58_fu_823_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln59_fu_940_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln71_fu_1071_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln74_fu_1172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln75_fu_1212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln81_fu_1263_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln82_fu_1296_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln83_fu_1331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((icmp_ln83_fu_1331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18) & (1'd0 == and_ln84_fu_1348_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & ((icmp_ln88_fu_1388_p2 == 1'd1) | (1'd0 == and_ln84_reg_1969)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln90_fu_1450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln101_fu_1498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln102_fu_1570_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln103_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_1504_p2 = (tn_3_reg_482 + 4'd1);

assign add_ln102_fu_1576_p2 = (th_2_reg_493 + 6'd1);

assign add_ln103_fu_1652_p2 = (tw_2_reg_504 + 6'd1);

assign add_ln105_1_fu_1549_p2 = (tmp_28_cast_reg_2034 + zext_ln105_2_fu_1545_p1);

assign add_ln105_2_fu_1597_p2 = ($signed(sext_ln102_reg_2047) + $signed(zext_ln105_3_fu_1593_p1));

assign add_ln105_3_fu_1628_p2 = (tmp_18_reg_2052 + zext_ln105_4_fu_1624_p1);

assign add_ln105_4_fu_1678_p2 = (sub_ln105_1_reg_2070 + zext_ln105_6_fu_1674_p1);

assign add_ln105_fu_1668_p2 = (zext_ln103_fu_1638_p1 + w_reg_302);

assign add_ln11_fu_991_p2 = ($signed(sext_ln62_fu_968_p1) + $signed(zext_ln37_reg_1747));

assign add_ln31_fu_592_p2 = (n_fu_164 + 7'd8);

assign add_ln34_fu_550_p2 = (h_reg_290 + 9'd32);

assign add_ln37_fu_612_p2 = (w_reg_302 + 9'd32);

assign add_ln41_fu_670_p2 = (tn_reg_314 + 4'd1);

assign add_ln42_fu_738_p2 = (th_reg_325 + 6'd1);

assign add_ln43_fu_773_p2 = (tw_reg_336 + 6'd1);

assign add_ln45_1_fu_753_p2 = (tmp_3_reg_1792 + zext_ln45_2_fu_749_p1);

assign add_ln45_fu_715_p2 = (tmp_16_cast_reg_1764 + zext_ln45_1_fu_711_p1);

assign add_ln58_fu_829_p2 = (ih_reg_347 + 6'd1);

assign add_ln59_fu_946_p2 = (iw_reg_358 + 6'd1);

assign add_ln62_1_fu_972_p2 = ($signed(sext_ln62_fu_968_p1) + $signed(zext_ln36_reg_1734));

assign add_ln62_fu_962_p2 = ($signed(zext_ln59_fu_932_p1) + $signed(7'd124));

assign add_ln63_1_fu_922_p2 = (add_ln63_reg_1821 + zext_ln63_2_fu_918_p1);

assign add_ln63_2_fu_1030_p2 = ($signed(sub_ln63_reg_1839) + $signed(sext_ln63_fu_1026_p1));

assign add_ln63_fu_809_p2 = (tmp_s_fu_789_p3 + zext_ln63_fu_805_p1);

assign add_ln71_fu_1077_p2 = (tn_1_reg_369 + 4'd1);

assign add_ln74_fu_1178_p2 = (kh_reg_380 + 4'd1);

assign add_ln75_fu_1218_p2 = (kw_reg_391 + 4'd1);

assign add_ln76_1_fu_1108_p2 = (zext_ln76_3_fu_1104_p1 + zext_ln76_2_fu_1092_p1);

assign add_ln76_2_fu_1122_p2 = (add_ln76_reg_1866 + zext_ln76_5_fu_1118_p1);

assign add_ln76_3_fu_1143_p2 = (p_shl6_fu_1135_p3 + zext_ln76_6_fu_1127_p1);

assign add_ln76_4_fu_1149_p2 = (add_ln76_1_reg_1879 + zext_ln76_4_fu_1114_p1);

assign add_ln76_5_fu_1166_p2 = (p_shl5_fu_1158_p3 + zext_ln76_7_fu_1154_p1);

assign add_ln76_6_fu_1192_p2 = (add_ln76_3_reg_1884 + zext_ln76_9_fu_1188_p1);

assign add_ln76_7_fu_1202_p2 = (add_ln76_5_reg_1889 + zext_ln76_8_fu_1184_p1);

assign add_ln76_fu_1061_p2 = (zext_ln76_1_fu_1057_p1 + zext_ln76_fu_1045_p1);

assign add_ln81_fu_1269_p2 = (tn_2_reg_402 + 4'd1);

assign add_ln82_fu_1302_p2 = (th_1_reg_413 + 6'd1);

assign add_ln83_fu_1337_p2 = (tw_1_reg_425 + 6'd1);

assign add_ln85_1_fu_1317_p2 = (tmp_16_reg_1938 + zext_ln85_2_fu_1313_p1);

assign add_ln85_fu_1279_p2 = (tmp_24_cast_reg_1920 + zext_ln85_1_fu_1275_p1);

assign add_ln88_fu_1394_p2 = (kh_1_reg_437 + 4'd1);

assign add_ln90_fu_1456_p2 = (kw_1_reg_459 + 4'd1);

assign add_ln91_1_fu_1257_p2 = (zext_ln91_fu_1253_p1 + zext_ln85_fu_1229_p1);

assign add_ln91_2_fu_1357_p2 = (add_ln91_1_reg_1925 + zext_ln91_1_fu_1353_p1);

assign add_ln91_3_fu_1378_p2 = (p_shl8_fu_1370_p3 + zext_ln91_2_fu_1362_p1);

assign add_ln91_4_fu_1426_p2 = (tmp_19_fu_1406_p3 + zext_ln91_3_fu_1422_p1);

assign add_ln91_5_fu_1436_p2 = (add_ln91_3_reg_1978 + zext_ln91_4_fu_1432_p1);

assign add_ln91_6_fu_1472_p2 = (add_ln91_4_reg_1991 + zext_ln91_6_fu_1468_p1);

assign add_ln91_fu_1462_p2 = (zext_ln90_fu_1446_p1 + tw_1_reg_425);

assign and_ln104_fu_1663_p2 = (icmp_ln104_fu_1658_p2 & cmp266_reg_2065);

assign and_ln44_fu_784_p2 = (icmp_ln44_fu_779_p2 & cmp37_reg_1805);

assign and_ln60_fu_957_p2 = (icmp_ln60_fu_952_p2 & cmp78_reg_1834);

assign and_ln84_fu_1348_p2 = (icmp_ln84_fu_1343_p2 & cmp182_reg_1951);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln45_fu_707_p1 = conv1_biases_q0;

assign cmp182_fu_1308_p2 = ((zext_ln82_fu_1292_p1 < tH_reg_1722) ? 1'b1 : 1'b0);

assign cmp1_i_fu_863_p2 = (($signed(empty_44_fu_850_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign cmp266_fu_1582_p2 = ((zext_ln102_1_fu_1566_p1 < tH_reg_1722) ? 1'b1 : 1'b0);

assign cmp37_fu_744_p2 = ((zext_ln42_fu_728_p1 < tH_reg_1722) ? 1'b1 : 1'b0);

assign cmp78_fu_835_p2 = ((zext_ln58_1_fu_819_p1 < sub77_reg_1729) ? 1'b1 : 1'b0);

assign conv1_biases_address0 = zext_ln45_fu_697_p1;

assign conv1_weights_address0 = zext_ln76_11_fu_1207_p1;

assign empty_44_fu_850_p2 = ($signed(tmp_cast_fu_846_p1) + $signed(zext_ln33_reg_1704));

assign empty_45_fu_873_p2 = ($signed(tmp1_cast_fu_869_p1) + $signed(trunc_ln34_reg_1717));

assign empty_46_fu_886_p2 = (tmp_9_fu_855_p3 | cmp1_i_fu_863_p2);

assign empty_47_fu_1086_p2 = (zext_ln71_fu_1067_p1 + trunc_ln30_fu_1083_p1);

assign empty_48_fu_1400_p2 = (zext_ln88_fu_1384_p1 + th_1_reg_413);

assign empty_49_fu_1513_p2 = (zext_ln101_fu_1494_p1 + trunc_ln30_1_fu_1510_p1);

assign empty_50_fu_1587_p2 = (zext_ln102_fu_1562_p1 + h_reg_290);

assign empty_fu_676_p1 = tn_reg_314[2:0];

assign feat1_address0 = zext_ln105_7_fu_1683_p1;

assign feat1_d0 = out_tile_q0;

assign grp_fu_704_p_ce = 1'b1;

assign grp_fu_704_p_din0 = acc_8_reg_470;

assign grp_fu_704_p_din1 = mul_reg_2024;

assign grp_fu_704_p_opcode = 2'd0;

assign grp_fu_708_p_ce = 1'b1;

assign grp_fu_708_p_din0 = w_tile_0_load_reg_2014;

assign grp_fu_708_p_din1 = in_tile_0_load_reg_2019;

assign gx_fu_1018_p3 = ((or_ln10_fu_1012_p2[0:0] == 1'b1) ? select_ln10_fu_1004_p3 : add_ln11_fu_991_p2);

assign gy_fu_892_p3 = ((empty_46_fu_886_p2[0:0] == 1'b1) ? spec_select_i_cast_cast_fu_878_p3 : empty_45_fu_873_p2);

assign icmp_ln101_fu_1498_p2 = ((tn_3_reg_482 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_1570_p2 = ((th_2_reg_493 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln103_fu_1646_p2 = ((tw_2_reg_504 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_1658_p2 = ((zext_ln103_1_fu_1642_p1 < tW_reg_1752) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_985_p2 = (($signed(add_ln62_1_fu_972_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_544_p2 = ((h_reg_290 < 9'd255) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_606_p2 = ((w_reg_302 < 9'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_664_p2 = ((tn_reg_314 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_732_p2 = ((th_reg_325 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_767_p2 = ((tw_reg_336 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_779_p2 = ((zext_ln43_fu_763_p1 < tW_reg_1752) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_823_p2 = ((ih_reg_347 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_940_p2 = ((iw_reg_358 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_952_p2 = ((zext_ln59_1_fu_936_p1 < sub81_reg_1782) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1071_p2 = ((tn_1_reg_369 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_1172_p2 = ((kh_reg_380 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_1212_p2 = ((kw_reg_391 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_1263_p2 = ((tn_2_reg_402 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1296_p2 = ((th_1_reg_413 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_1331_p2 = ((tw_1_reg_425 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_1343_p2 = ((zext_ln83_fu_1327_p1 < tW_reg_1752) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1388_p2 = ((kh_1_reg_437 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_1450_p2 = ((kw_1_reg_459 == 4'd9) ? 1'b1 : 1'b0);

assign in_tile_0_d0 = input_ftmap_q0;

assign input_ftmap_address0 = zext_ln63_4_fu_1035_p1;

assign or_ln10_fu_1012_p2 = (tmp_14_fu_977_p3 | icmp_ln11_fu_985_p2);

assign p_shl5_fu_1158_p3 = {{add_ln76_4_fu_1149_p2}, {3'd0}};

assign p_shl6_fu_1135_p3 = {{trunc_ln76_fu_1131_p1}, {3'd0}};

assign p_shl8_fu_1370_p3 = {{trunc_ln91_fu_1366_p1}, {3'd0}};

assign p_shl_fu_1610_p3 = {{trunc_ln105_1_fu_1606_p1}, {8'd0}};

assign select_ln10_fu_1004_p3 = ((tmp_15_fu_996_p3[0:0] == 1'b1) ? 10'd0 : 10'd254);

assign sext_ln102_fu_1541_p1 = $signed(sub_ln105_fu_1535_p2);

assign sext_ln105_fu_1602_p1 = add_ln105_2_fu_1597_p2;

assign sext_ln62_fu_968_p1 = $signed(add_ln62_fu_962_p2);

assign sext_ln63_fu_1026_p1 = $signed(gx_fu_1018_p3);

assign spec_select_i_cast_cast_fu_878_p3 = ((tmp_9_fu_855_p3[0:0] == 1'b1) ? 8'd0 : 8'd254);

assign sub77_fu_586_p2 = (zext_ln34_fu_582_p1 + 9'd8);

assign sub81_fu_702_p2 = (zext_ln37_1_reg_1759 + 9'd8);

assign sub_ln105_1_fu_1618_p2 = ($signed(p_shl_fu_1610_p3) - $signed(sext_ln105_fu_1602_p1));

assign sub_ln105_fu_1535_p2 = (zext_ln105_1_fu_1531_p1 - zext_ln105_fu_1519_p1);

assign sub_ln63_fu_912_p2 = (tmp_10_fu_904_p3 - zext_ln63_1_fu_900_p1);

assign tH_fu_574_p3 = ((tmp_7_fu_556_p3[0:0] == 1'b1) ? xor_ln34_fu_568_p2 : 8'd32);

assign tW_fu_640_p3 = ((tmp_8_fu_618_p3[0:0] == 1'b1) ? xor_ln37_fu_634_p2 : 8'd32);

assign tmp1_cast_fu_869_p1 = tmp_fu_840_p2;

assign tmp_10_fu_904_p3 = {{gy_fu_892_p3}, {8'd0}};

assign tmp_11_fu_1049_p3 = {{tn_1_reg_369}, {3'd0}};

assign tmp_12_fu_1096_p3 = {{empty_47_fu_1086_p2}, {3'd0}};

assign tmp_13_fu_1245_p3 = {{tn_2_reg_402}, {3'd0}};

assign tmp_14_fu_977_p3 = add_ln62_1_fu_972_p2[32'd9];

assign tmp_15_fu_996_p3 = add_ln62_1_fu_972_p2[32'd9];

assign tmp_16_cast_fu_656_p3 = {{trunc_ln45_fu_652_p1}, {5'd0}};

assign tmp_16_fu_1284_p3 = {{add_ln85_fu_1279_p2}, {5'd0}};

assign tmp_17_fu_1523_p3 = {{empty_49_fu_1513_p2}, {8'd0}};

assign tmp_18_fu_1554_p3 = {{add_ln105_1_fu_1549_p2}, {5'd0}};

assign tmp_19_fu_1406_p3 = {{empty_48_fu_1400_p2}, {5'd0}};

assign tmp_20_fu_1414_p3 = {{empty_48_fu_1400_p2}, {3'd0}};

assign tmp_24_cast_fu_1237_p3 = {{trunc_ln85_fu_1233_p1}, {5'd0}};

assign tmp_28_cast_fu_1486_p3 = {{trunc_ln105_fu_1482_p1}, {5'd0}};

assign tmp_2_fu_797_p3 = {{ih_reg_347}, {3'd0}};

assign tmp_3_fu_720_p3 = {{add_ln45_fu_715_p2}, {5'd0}};

assign tmp_4_fu_680_p4 = {{n_1_reg_1694[5:3]}};

assign tmp_5_fu_689_p3 = {{tmp_4_fu_680_p4}, {empty_fu_676_p1}};

assign tmp_6_fu_532_p3 = n_fu_164[32'd6];

assign tmp_7_fu_556_p3 = add_ln34_fu_550_p2[32'd8];

assign tmp_8_fu_618_p3 = add_ln37_fu_612_p2[32'd8];

assign tmp_9_fu_855_p3 = empty_44_fu_850_p2[32'd9];

assign tmp_cast_fu_846_p1 = tmp_fu_840_p2;

assign tmp_fu_840_p2 = ($signed(zext_ln58_fu_815_p1) + $signed(7'd124));

assign tmp_s_fu_789_p3 = {{ih_reg_347}, {5'd0}};

assign trunc_ln105_1_fu_1606_p1 = add_ln105_2_fu_1597_p2[13:0];

assign trunc_ln105_fu_1482_p1 = tn_3_reg_482[2:0];

assign trunc_ln30_1_fu_1510_p1 = n_1_reg_1694[5:0];

assign trunc_ln30_fu_1083_p1 = n_1_reg_1694[5:0];

assign trunc_ln34_fu_564_p1 = h_reg_290[7:0];

assign trunc_ln37_fu_626_p1 = w_reg_302[7:0];

assign trunc_ln45_fu_652_p1 = tn_reg_314[2:0];

assign trunc_ln76_fu_1131_p1 = add_ln76_2_fu_1122_p2[6:0];

assign trunc_ln85_fu_1233_p1 = tn_2_reg_402[2:0];

assign trunc_ln91_fu_1366_p1 = add_ln91_2_fu_1357_p2[6:0];

assign w_tile_0_d0 = conv1_weights_q0;

assign xor_ln34_fu_568_p2 = (trunc_ln34_fu_564_p1 ^ 8'd255);

assign xor_ln37_fu_634_p2 = (trunc_ln37_fu_626_p1 ^ 8'd255);

assign zext_ln101_fu_1494_p1 = tn_3_reg_482;

assign zext_ln102_1_fu_1566_p1 = th_2_reg_493;

assign zext_ln102_fu_1562_p1 = th_2_reg_493;

assign zext_ln103_1_fu_1642_p1 = tw_2_reg_504;

assign zext_ln103_fu_1638_p1 = tw_2_reg_504;

assign zext_ln105_1_fu_1531_p1 = tmp_17_fu_1523_p3;

assign zext_ln105_2_fu_1545_p1 = th_2_reg_493;

assign zext_ln105_3_fu_1593_p1 = empty_50_fu_1587_p2;

assign zext_ln105_4_fu_1624_p1 = tw_2_reg_504;

assign zext_ln105_5_fu_1633_p1 = add_ln105_3_fu_1628_p2;

assign zext_ln105_6_fu_1674_p1 = add_ln105_fu_1668_p2;

assign zext_ln105_7_fu_1683_p1 = add_ln105_4_reg_2092;

assign zext_ln105_fu_1519_p1 = empty_49_fu_1513_p2;

assign zext_ln33_fu_540_p1 = h_reg_290;

assign zext_ln34_fu_582_p1 = tH_fu_574_p3;

assign zext_ln36_fu_602_p1 = w_reg_302;

assign zext_ln37_1_fu_648_p1 = tW_fu_640_p3;

assign zext_ln37_fu_630_p1 = trunc_ln37_fu_626_p1;

assign zext_ln42_fu_728_p1 = th_reg_325;

assign zext_ln43_fu_763_p1 = tw_reg_336;

assign zext_ln45_1_fu_711_p1 = th_reg_325;

assign zext_ln45_2_fu_749_p1 = tw_reg_336;

assign zext_ln45_3_fu_758_p1 = add_ln45_1_fu_753_p2;

assign zext_ln45_fu_697_p1 = tmp_5_fu_689_p3;

assign zext_ln58_1_fu_819_p1 = ih_reg_347;

assign zext_ln58_fu_815_p1 = ih_reg_347;

assign zext_ln59_1_fu_936_p1 = iw_reg_358;

assign zext_ln59_fu_932_p1 = iw_reg_358;

assign zext_ln63_1_fu_900_p1 = gy_fu_892_p3;

assign zext_ln63_2_fu_918_p1 = iw_reg_358;

assign zext_ln63_3_fu_927_p1 = add_ln63_1_fu_922_p2;

assign zext_ln63_4_fu_1035_p1 = add_ln63_2_fu_1030_p2;

assign zext_ln63_fu_805_p1 = tmp_2_fu_797_p3;

assign zext_ln71_fu_1067_p1 = tn_1_reg_369;

assign zext_ln76_10_fu_1197_p1 = add_ln76_6_fu_1192_p2;

assign zext_ln76_11_fu_1207_p1 = add_ln76_7_fu_1202_p2;

assign zext_ln76_1_fu_1057_p1 = tmp_11_fu_1049_p3;

assign zext_ln76_2_fu_1092_p1 = empty_47_fu_1086_p2;

assign zext_ln76_3_fu_1104_p1 = tmp_12_fu_1096_p3;

assign zext_ln76_4_fu_1114_p1 = kh_reg_380;

assign zext_ln76_5_fu_1118_p1 = kh_reg_380;

assign zext_ln76_6_fu_1127_p1 = add_ln76_2_fu_1122_p2;

assign zext_ln76_7_fu_1154_p1 = add_ln76_4_fu_1149_p2;

assign zext_ln76_8_fu_1184_p1 = kw_reg_391;

assign zext_ln76_9_fu_1188_p1 = kw_reg_391;

assign zext_ln76_fu_1045_p1 = tn_1_reg_369;

assign zext_ln82_fu_1292_p1 = th_1_reg_413;

assign zext_ln83_fu_1327_p1 = tw_1_reg_425;

assign zext_ln85_1_fu_1275_p1 = th_1_reg_413;

assign zext_ln85_2_fu_1313_p1 = tw_1_reg_425;

assign zext_ln85_3_fu_1322_p1 = add_ln85_1_fu_1317_p2;

assign zext_ln85_fu_1229_p1 = tn_2_reg_402;

assign zext_ln88_fu_1384_p1 = kh_1_reg_437;

assign zext_ln90_fu_1446_p1 = kw_1_reg_459;

assign zext_ln91_1_fu_1353_p1 = kh_1_reg_437;

assign zext_ln91_2_fu_1362_p1 = add_ln91_2_fu_1357_p2;

assign zext_ln91_3_fu_1422_p1 = tmp_20_fu_1414_p3;

assign zext_ln91_4_fu_1432_p1 = kw_1_reg_459;

assign zext_ln91_5_fu_1441_p1 = add_ln91_5_fu_1436_p2;

assign zext_ln91_6_fu_1468_p1 = add_ln91_fu_1462_p2;

assign zext_ln91_7_fu_1477_p1 = add_ln91_6_fu_1472_p2;

assign zext_ln91_fu_1253_p1 = tmp_13_fu_1245_p3;

always @ (posedge ap_clk) begin
    zext_ln33_reg_1704[9] <= 1'b0;
    zext_ln36_reg_1734[9] <= 1'b0;
    zext_ln37_reg_1747[9:8] <= 2'b00;
    zext_ln37_1_reg_1759[8] <= 1'b0;
    tmp_16_cast_reg_1764[4:0] <= 5'b00000;
    tmp_3_reg_1792[4:0] <= 5'b00000;
    add_ln63_reg_1821[2:0] <= 3'b000;
    tmp_24_cast_reg_1920[4:0] <= 5'b00000;
    tmp_16_reg_1938[4:0] <= 5'b00000;
    add_ln91_4_reg_1991[2:0] <= 3'b000;
    tmp_28_cast_reg_2034[4:0] <= 5'b00000;
    tmp_18_reg_2052[4:0] <= 5'b00000;
end

endmodule //srcnn_conv1

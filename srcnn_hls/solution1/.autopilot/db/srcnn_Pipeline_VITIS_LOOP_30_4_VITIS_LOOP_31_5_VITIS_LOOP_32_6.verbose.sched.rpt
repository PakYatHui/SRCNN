

================================================================
== Vitis HLS Report for 'srcnn_Pipeline_VITIS_LOOP_30_4_VITIS_LOOP_31_5_VITIS_LOOP_32_6'
================================================================
* Date:           Sun Oct 12 22:06:27 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.184 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  Latency (cycles) |   Latency (absolute)  |      Interval     | Pipeline|
    |   min   |   max   |    min    |    max    |   min   |   max   |   Type  |
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  2080803|  2080803|  20.808 ms|  20.808 ms|  2080803|  2080803|       no|
    +---------+---------+-----------+-----------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip  |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |- VITIS_LOOP_30_4_VITIS_LOOP_31_5_VITIS_LOOP_32_6  |  2080801|  2080801|         3|          1|          1|  2080800|       yes|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%x = alloca i32 1"   --->   Operation 6 'alloca' 'x' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%y = alloca i32 1"   --->   Operation 7 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten40 = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%c = alloca i32 1"   --->   Operation 9 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten53 = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten53' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.42ns)   --->   "%store_ln0 = store i21 0, i21 %indvar_flatten53"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 12 [1/1] (0.42ns)   --->   "%store_ln0 = store i6 0, i6 %c"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 13 [1/1] (0.42ns)   --->   "%store_ln0 = store i16 0, i16 %indvar_flatten40"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 14 [1/1] (0.42ns)   --->   "%store_ln0 = store i8 0, i8 %y"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 15 [1/1] (0.42ns)   --->   "%store_ln0 = store i8 0, i8 %x"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc54"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.18>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten53_load = load i21 %indvar_flatten53" [src/srcnn.cpp:30]   --->   Operation 17 'load' 'indvar_flatten53_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.90ns)   --->   "%icmp_ln30 = icmp_eq  i21 %indvar_flatten53_load, i21 2080800" [src/srcnn.cpp:30]   --->   Operation 18 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 0.90> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.90ns)   --->   "%add_ln30_1 = add i21 %indvar_flatten53_load, i21 1" [src/srcnn.cpp:30]   --->   Operation 19 'add' 'add_ln30_1' <Predicate = true> <Delay = 0.90> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln30 = br i1 %icmp_ln30, void %for.inc60, void %for.end62.exitStub" [src/srcnn.cpp:30]   --->   Operation 20 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%x_load = load i8 %x" [src/srcnn.cpp:32]   --->   Operation 21 'load' 'x_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%y_load = load i8 %y" [src/srcnn.cpp:30]   --->   Operation 22 'load' 'y_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%indvar_flatten40_load = load i16 %indvar_flatten40" [src/srcnn.cpp:31]   --->   Operation 23 'load' 'indvar_flatten40_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%c_load = load i6 %c" [src/srcnn.cpp:30]   --->   Operation 24 'load' 'c_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.78ns)   --->   "%add_ln30 = add i6 %c_load, i6 1" [src/srcnn.cpp:30]   --->   Operation 25 'add' 'add_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.85ns)   --->   "%icmp_ln31 = icmp_eq  i16 %indvar_flatten40_load, i16 65025" [src/srcnn.cpp:31]   --->   Operation 26 'icmp' 'icmp_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.39ns)   --->   "%select_ln30 = select i1 %icmp_ln31, i8 0, i8 %y_load" [src/srcnn.cpp:30]   --->   Operation 27 'select' 'select_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.38ns)   --->   "%select_ln30_1 = select i1 %icmp_ln31, i6 %add_ln30, i6 %c_load" [src/srcnn.cpp:30]   --->   Operation 28 'select' 'select_ln30_1' <Predicate = (!icmp_ln30)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i6 %select_ln30_1" [src/srcnn.cpp:34]   --->   Operation 29 'zext' 'zext_ln34' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_8 = bitconcatenate i14 @_ssdm_op_BitConcatenate.i14.i6.i8, i6 %select_ln30_1, i8 0" [src/srcnn.cpp:34]   --->   Operation 30 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln34_1 = zext i14 %tmp_8" [src/srcnn.cpp:34]   --->   Operation 31 'zext' 'zext_ln34_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.83ns)   --->   "%sub_ln34 = sub i15 %zext_ln34_1, i15 %zext_ln34" [src/srcnn.cpp:34]   --->   Operation 32 'sub' 'sub_ln34' <Predicate = (!icmp_ln30)> <Delay = 0.83> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i15 %sub_ln34" [src/srcnn.cpp:31]   --->   Operation 33 'sext' 'sext_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node and_ln30)   --->   "%xor_ln30 = xor i1 %icmp_ln31, i1 1" [src/srcnn.cpp:30]   --->   Operation 34 'xor' 'xor_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.76ns)   --->   "%icmp_ln32 = icmp_eq  i8 %x_load, i8 255" [src/srcnn.cpp:32]   --->   Operation 35 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln30 = and i1 %icmp_ln32, i1 %xor_ln30" [src/srcnn.cpp:30]   --->   Operation 36 'and' 'and_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.76ns)   --->   "%add_ln31 = add i8 %select_ln30, i8 1" [src/srcnn.cpp:31]   --->   Operation 37 'add' 'add_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node select_ln31)   --->   "%or_ln31 = or i1 %and_ln30, i1 %icmp_ln31" [src/srcnn.cpp:31]   --->   Operation 38 'or' 'or_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln31 = select i1 %or_ln31, i8 0, i8 %x_load" [src/srcnn.cpp:31]   --->   Operation 39 'select' 'select_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.39ns)   --->   "%select_ln31_1 = select i1 %and_ln30, i8 %add_ln31, i8 %select_ln30" [src/srcnn.cpp:31]   --->   Operation 40 'select' 'select_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln34_2 = zext i8 %select_ln31_1" [src/srcnn.cpp:34]   --->   Operation 41 'zext' 'zext_ln34_2' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.84ns)   --->   "%add_ln34 = add i16 %sext_ln31, i16 %zext_ln34_2" [src/srcnn.cpp:34]   --->   Operation 42 'add' 'add_ln34' <Predicate = (!icmp_ln30)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%sext_ln34 = sext i16 %add_ln34" [src/srcnn.cpp:34]   --->   Operation 43 'sext' 'sext_ln34' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i16 %add_ln34" [src/srcnn.cpp:34]   --->   Operation 44 'trunc' 'trunc_ln34' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%p_shl6 = bitconcatenate i21 @_ssdm_op_BitConcatenate.i21.i13.i8, i13 %trunc_ln34, i8 0" [src/srcnn.cpp:34]   --->   Operation 45 'bitconcatenate' 'p_shl6' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln34_1 = sub i21 %p_shl6, i21 %sext_ln34" [src/srcnn.cpp:34]   --->   Operation 46 'sub' 'sub_ln34_1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.35> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln34_3 = zext i8 %select_ln31" [src/srcnn.cpp:34]   --->   Operation 47 'zext' 'zext_ln34_3' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.70ns) (root node of TernaryAdder)   --->   "%add_ln34_1 = add i21 %sub_ln34_1, i21 %zext_ln34_3" [src/srcnn.cpp:34]   --->   Operation 48 'add' 'add_ln34_1' <Predicate = (!icmp_ln30)> <Delay = 0.70> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.35> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln34_4 = zext i21 %add_ln34_1" [src/srcnn.cpp:34]   --->   Operation 49 'zext' 'zext_ln34_4' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%feat2_addr = getelementptr i32 %feat2, i64 0, i64 %zext_ln34_4" [src/srcnn.cpp:34]   --->   Operation 50 'getelementptr' 'feat2_addr' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 51 [2/2] (1.23ns)   --->   "%feat2_load = load i21 %feat2_addr" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 51 'load' 'feat2_load' <Predicate = (!icmp_ln30)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 2080800> <RAM>
ST_2 : Operation 52 [1/1] (0.76ns)   --->   "%add_ln32 = add i8 %select_ln31, i8 1" [src/srcnn.cpp:32]   --->   Operation 52 'add' 'add_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.85ns)   --->   "%add_ln31_1 = add i16 %indvar_flatten40_load, i16 1" [src/srcnn.cpp:31]   --->   Operation 53 'add' 'add_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.35ns)   --->   "%select_ln31_2 = select i1 %icmp_ln31, i16 1, i16 %add_ln31_1" [src/srcnn.cpp:31]   --->   Operation 54 'select' 'select_ln31_2' <Predicate = (!icmp_ln30)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.42ns)   --->   "%store_ln32 = store i21 %add_ln30_1, i21 %indvar_flatten53" [src/srcnn.cpp:32]   --->   Operation 55 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.42>
ST_2 : Operation 56 [1/1] (0.42ns)   --->   "%store_ln32 = store i6 %select_ln30_1, i6 %c" [src/srcnn.cpp:32]   --->   Operation 56 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.42>
ST_2 : Operation 57 [1/1] (0.42ns)   --->   "%store_ln32 = store i16 %select_ln31_2, i16 %indvar_flatten40" [src/srcnn.cpp:32]   --->   Operation 57 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.42>
ST_2 : Operation 58 [1/1] (0.42ns)   --->   "%store_ln32 = store i8 %select_ln31_1, i8 %y" [src/srcnn.cpp:32]   --->   Operation 58 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.42>
ST_2 : Operation 59 [1/1] (0.42ns)   --->   "%store_ln32 = store i8 %add_ln32, i8 %x" [src/srcnn.cpp:32]   --->   Operation 59 'store' 'store_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 4.01>
ST_3 : Operation 60 [1/2] (1.23ns)   --->   "%feat2_load = load i21 %feat2_addr" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 60 'load' 'feat2_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 2080800> <RAM>
ST_3 : [1/1] (0.42ns)   --->   Input mux for Operation 61 '%tmp_4 = fcmp_ogt  i32 %feat2_load, i32 0'
ST_3 : Operation 61 [2/2] (2.35ns)   --->   "%tmp_4 = fcmp_ogt  i32 %feat2_load, i32 0" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 61 'fcmp' 'tmp_4' <Predicate = true> <Delay = 2.35> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 78 'ret' 'ret_ln0' <Predicate = (icmp_ln30)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.46>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_30_4_VITIS_LOOP_31_5_VITIS_LOOP_32_6_str"   --->   Operation 62 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2080800, i64 2080800, i64 2080800"   --->   Operation 63 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_31_5_VITIS_LOOP_32_6_str"   --->   Operation 64 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%specpipeline_ln33 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [src/srcnn.cpp:33]   --->   Operation 65 'specpipeline' 'specpipeline_ln33' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%specloopname_ln32 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [src/srcnn.cpp:32]   --->   Operation 66 'specloopname' 'specloopname_ln32' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%bitcast_ln224 = bitcast i32 %feat2_load" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 67 'bitcast' 'bitcast_ln224' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln224, i32 23, i32 30" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 68 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%trunc_ln224 = trunc i32 %bitcast_ln224" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 69 'trunc' 'trunc_ln224' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.76ns)   --->   "%icmp_ln224 = icmp_ne  i8 %tmp_3, i8 255" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 70 'icmp' 'icmp_ln224' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.92ns)   --->   "%icmp_ln224_1 = icmp_eq  i23 %trunc_ln224, i23 0" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 71 'icmp' 'icmp_ln224_1' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln34)   --->   "%or_ln224 = or i1 %icmp_ln224_1, i1 %icmp_ln224" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 72 'or' 'or_ln224' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/2] (2.78ns)   --->   "%tmp_4 = fcmp_ogt  i32 %feat2_load, i32 0" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 73 'fcmp' 'tmp_4' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node select_ln34)   --->   "%and_ln224 = and i1 %or_ln224, i1 %tmp_4" [D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34]   --->   Operation 74 'and' 'and_ln224' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln34 = select i1 %and_ln224, i32 %feat2_load, i32 0" [src/srcnn.cpp:34]   --->   Operation 75 'select' 'select_ln34' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (1.23ns)   --->   "%store_ln34 = store i32 %select_ln34, i21 %feat2_addr" [src/srcnn.cpp:34]   --->   Operation 76 'store' 'store_ln34' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 2080800> <RAM>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln32 = br void %for.inc54" [src/srcnn.cpp:32]   --->   Operation 77 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten53') [6]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'indvar_flatten53' [7]  (0.427 ns)

 <State 2>: 5.184ns
The critical path consists of the following:
	'load' operation ('indvar_flatten40_load', src/srcnn.cpp:31) on local variable 'indvar_flatten40' [21]  (0.000 ns)
	'icmp' operation ('icmp_ln31', src/srcnn.cpp:31) [26]  (0.853 ns)
	'select' operation ('select_ln30', src/srcnn.cpp:30) [27]  (0.393 ns)
	'add' operation ('add_ln31', src/srcnn.cpp:31) [37]  (0.765 ns)
	'select' operation ('select_ln31_1', src/srcnn.cpp:31) [41]  (0.393 ns)
	'add' operation ('add_ln34', src/srcnn.cpp:34) [43]  (0.842 ns)
	'sub' operation ('sub_ln34_1', src/srcnn.cpp:34) [47]  (0.000 ns)
	'add' operation ('add_ln34_1', src/srcnn.cpp:34) [49]  (0.701 ns)
	'getelementptr' operation ('__b', src/srcnn.cpp:34) [51]  (0.000 ns)
	'load' operation ('feat2_load', D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34) on array 'feat2' [54]  (1.237 ns)

 <State 3>: 4.019ns
The critical path consists of the following:
	'load' operation ('feat2_load', D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34) on array 'feat2' [54]  (1.237 ns)
	multiplexor before operation 'fcmp' with delay (0.427 ns)
'fcmp' operation ('tmp_4', D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34) [61]  (2.355 ns)

 <State 4>: 4.468ns
The critical path consists of the following:
	'fcmp' operation ('tmp_4', D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34) [61]  (2.782 ns)
	'and' operation ('and_ln224', D:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:224->src/srcnn.cpp:34) [62]  (0.000 ns)
	'select' operation ('select_ln34', src/srcnn.cpp:34) [63]  (0.449 ns)
	'store' operation ('store_ln34', src/srcnn.cpp:34) of variable 'select_ln34', src/srcnn.cpp:34 on array 'feat2' [64]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
